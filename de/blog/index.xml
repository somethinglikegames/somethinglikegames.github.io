<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Something Like Games</title><link>https://www.somethinglikegames.de/de/blog/</link><description>Recent content in Blogs on Something Like Games</description><generator>Hugo -- gohugo.io</generator><language>de</language><lastBuildDate>Sun, 26 Mar 2023 12:00:00 +0100</lastBuildDate><atom:link href="https://www.somethinglikegames.de/de/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Netzwerktutorial 5: Login 3 - World-Server</title><link>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-5-login-3/</link><pubDate>Sun, 26 Mar 2023 12:00:00 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-5-login-3/</guid><description>Im letzten Artikel haben wir den Gateway- und den Authentication-Server fertig implementiert, sodass der Game-Client für gültige Zugangsdaten ein Token ausgestellt bekommt. Dieses Token soll nun dazu dienen, sich am World-Server anzumelden. Daher werden wir in diesem Artikel den Game-Client so erweitern, dass er den Token zum World-Server weiterleitet, um anschließend den World-Server in die Lage zu versetzen, den Token zu verifizieren.</description></item><item><title>Netzwerktutorial 4: Login 2 - Gateway- und Authentication-Server</title><link>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-4-login-2/</link><pubDate>Sun, 12 Mar 2023 11:30:00 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-4-login-2/</guid><description>Im letzten Artikel haben wir den Game-Client soweit erstellt, dass er den Gateway-Server mit Logindaten kontaktieren möchte. In diesem Artikel werden wir genau an dieser Stelle weiter machen und uns um den Gateway- und Authentication-Server kümmern. Bevor wir uns aber um den eigentlichen Loginvorgang kümmern können, müssen wir zuerst Gateway- und Authentication-Server miteinander bekannt machen und dafür sorgen, dass sie einander auch trauen. Wir benutzen dafür einen Mechanismus, welcher eine gegenseitige Authentifizierung bereits während des Verbindungsaufbaus ermöglicht und erst im November 2022 bei Godot 4 eingeführt wurde.</description></item><item><title>Netzwerktutorial 3: Login 1 - Der Game-Client</title><link>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-3-login-1/</link><pubDate>Sun, 26 Feb 2023 12:00:00 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-3-login-1/</guid><description>Mit Hilfe des letzten Artikels haben wir nun ein Grundgerüst, bestehend aus drei Servern, die auf den UDP-Ports &lt;code>1909&lt;/code>-&lt;code>1911&lt;/code> laufen und uns per Konsolenausgabe über Verbindungsaufbau/-abbau von Clients informieren. Dieser Artikel beschäftigt sich mit dem ersten Teil des Loginvorgangs und wir erstellen den Game-Client soweit, dass er eine Verbindung zum Gateway-Server aufbaut und die Logindaten dorthin verschickt. Aber zuvor besprechen wir noch etwas allgemeiner den Loginvorgang und RPCs bei Godot.</description></item><item><title>Netzwerktutorial 2: Das "gehende Skelett"</title><link>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-2-walking-skeleton/</link><pubDate>Sun, 12 Feb 2023 11:00:00 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-2-walking-skeleton/</guid><description>Ich habe wirklich lange über die &lt;em>richtige&lt;/em> Vorgehensweise für dieses Tutorial nachgedacht. Schließlich gibt es verschiedene Möglichkeiten, wenn man, wie hier, die aktuell geplanten vier Komponenten entwickeln möchte. Ein Extremfall wäre es, pro Tutorial jeweils eine Komponente vollständig zu entwickeln und dadurch erst zum Schluss die Kommunikation zwischen den Komponenten zu ermöglichen. Ich habe mich für eine andere Variante entschieden und setze alle Komponenten direkt ohne wirkliche Funktionalität auf, um sie anschließend in jedem Tutorial, passend zum Thema, mit weiteren Inhalten zu füllen.</description></item><item><title>Netzwerktutorial 1: Allgemeines und Übersicht</title><link>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-1-overview/</link><pubDate>Sun, 29 Jan 2023 12:00:00 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/network-tutorial-1-overview/</guid><description>Godot 4 ist auf dem Weg zum ersten Release Candidate. Der Unterschied zwischen Godot 3.x und Godot 4 ist gewaltig. Während es schon diverse Tutorials zu vielen der Änderungen gibt, kommt es mir so vor, als ob der Bereich der Netzwerkprogrammierung vernachlässigt wurde und das, obwohl, oder vielleicht weil, es dort auch eine Menge Änderungen gab. Dazu kommt, dass mich dieser Teil besonders interessiert, da es bislang fast nur pure Multiplayer-Spiele geschafft haben, mich längere Zeit zu fesseln und ich in diesem Bereich meine berufliche Erfahrung gut mit einbringen kann.</description></item><item><title>Ist Godot 4 bereit für AA- oder sogar AAA?</title><link>https://www.somethinglikegames.de/de/blog/2023/status-of-godot-4/</link><pubDate>Wed, 18 Jan 2023 11:30:15 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/status-of-godot-4/</guid><description>Kurz nachdem ich meinen letzten Artikel online gestellt habe, hat Juan Linietsky, einer der Gründer der Godot Engine, einen Artikel über die Konkurrenzfähigkeit der Godot Engine im Bereich von AA- und AAA-Spieleentwicklung veröffentlicht.
Der Artikel ist wirklich sehr lesenswert, da er einerseits auf die technischen Möglichkeiten mit Godot 4 (Renderer, Physik, Scripting, GDExtension, …) eingeht und andererseits aufzeigt, was seiner Meinung nach noch fehlt, um Spiele auf AA-/AAA-Niveau mit der Godot Engine zu entwickeln.</description></item><item><title>Warum ich mich für die Godot Engine entschieden habe</title><link>https://www.somethinglikegames.de/de/blog/2023/why-i-chose-godot/</link><pubDate>Sun, 15 Jan 2023 18:56:40 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/why-i-chose-godot/</guid><description>Wenn man sich in der heutigen Zeit mit Spieleentwicklung beschäftigen möchte, wird man schon direkt zu Beginn mit einem Luxusproblem konfrontiert. Während in den Anfängen der Videospieleentwicklung beinahe für jedes Spiel die genutzten Sound- und Grafikausgaben Inhouse neu entwickelt bzw. überarbeitet wurden, kann man heutzutage aus einer Vielzahl möglicher Werkzeuge auswählen.
Ich habe bislang zwei Computerspiele &amp;ldquo;veröffentlicht&amp;rdquo;.
Das erste Spiel war ein 2D Jump&amp;rsquo;n&amp;rsquo;Run, welches die Geschichte meiner (mittlerweile) Frau und mir erzählte, was wir als Hochzeitseinladung verwendeten.</description></item><item><title>Warum dieser Blog?</title><link>https://www.somethinglikegames.de/de/blog/2023/why-this-blog/</link><pubDate>Sun, 01 Jan 2023 18:56:40 +0100</pubDate><guid>https://www.somethinglikegames.de/de/blog/2023/why-this-blog/</guid><description>&lt;p>Willkommen!&lt;/p>&lt;p>Schön, dass ihr euch die Mühe macht, diesen Text zu lesen. Hier möchte ich mein Vorhaben zunächst erläutern, bevor ich mit der Umsetzung beginne, daher nun dieser Beitrag.&lt;/p></description></item></channel></rss>